name: 发布 NPM 包

on:
  push:
    tags:
      - "v*" # 只在推送以 v 开头的标签时触发，如 v1.0.1
  workflow_dispatch: # 保留手动触发选项
    inputs:
      version:
        description: "发布版本 (patch | minor | major)"
        required: true
        default: "patch"

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: 安装依赖
        run: npm ci

      - name: 代码检查
        run: npm run lint

      - name: 类型检查
        run: npm run typecheck

      - name: 构建
        run: npm run build

      # 只有在手动触发时才更新版本
      - name: 版本更新 (手动触发)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version ${{ github.event.inputs.version }}
          git push
          git push --tags

      # 同步 package.json 版本与 tag 版本 (当通过 tag 触发时)
      - name: 同步版本与 Tag (Tag 触发)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          # 从 tag 中提取版本号 (去掉 'v' 前缀)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Tag version: $TAG_VERSION"

          # 获取当前 package.json 中的版本号
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "Package version: $PACKAGE_VERSION"

          # 只有当版本不同时才更新
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Updating package.json version from $PACKAGE_VERSION to $TAG_VERSION"
            npm version $TAG_VERSION --no-git-tag-version
          else
            echo "Package.json version already matches tag version, skipping update"
          fi

      - name: 发布到 NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
